openmvg

openMVG_main_SfMInit_ImageListing -i [] -d [] -o []


    adding the camera model to the database
    or using the -f option on openMVG_main_SfMInit_ImageListing (-f std::max(w,h)*1.2)

-d openMVG/src/openMVG/exif/sensor_width_database/sensor_width_camera_database.txt
openMVG_main_ComputeFeatures -i [..\matches\sfm_data.json] -o [...\matches]
openMVG_main_ComputeMatches -i [..\matches\sfm_data.json] -o [...\matches
openMVG_main_IncrementalSfM -i Dataset/matches/sfm_data.json -m Dataset/matches/ -o Dataset/out_Incremental_Reconstruction/

mvs

openMVG_main_openMVG2openMVS -i sfm_data.bin -o scene.mvs
bin/opensfm export_openmvs
DensifyPointCloud scene.mvs
ReconstructMesh scene_dense.mvs
RefineMesh scene_mesh.mvs
TextureMesh scene_dense_mesh.mvs
export PATH=$PATH:/usr/local/bin/OpenMVS
TextureMesh.exe --resolution-level 3 scene_dense_mesh.mvs


opencv_contrib

doenload opencv and opencv contrib
mkdir build
cd build
cmake -DCMAKE_BUILD_TYPE=RELEASE \
	-DCMAKE_INSTALL_PREFIX=/usr/local \
	-DINSTALL_PYTHON_EXAMPLES=ON \
	-DINSTALL_C_EXAMPLES=OFF \
	-DOPENCV_EXTRA_MODULES_PATH=~/opencv_contrib-3.4.1/modules \
	-DPYTHON_EXECUTABLE=~/anaconda3/bin/python3 \
	-DPYTHON_LIBRARY=~/anaconda3/lib/libpython3.6m.so \
	-DPYTHON_NUMPY_INCLUDE_DIR=~/anaconda3/lib/python3.6/site-packages/numpy/core \
	-DPYTHON_PACKAGES_PATH=~/anaconda3/lib/python3.6/site-packages \
	-DBUILD_opencv_python3=yes \
	-DBUILD_EXAMPLES=ON ..

make -j4
sudo make install

cd /usr/local/lib/python3.6/site-packages/
sudo mv cv2.cpython-36m-x86_64-linux-gnu.so cv2.so
